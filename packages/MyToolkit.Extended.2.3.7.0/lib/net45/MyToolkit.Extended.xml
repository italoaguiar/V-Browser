<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyToolkit.Extended</name>
    </assembly>
    <members>
        <member name="M:MyToolkit.Mvvm.ViewModelHelper.RegisterViewModel(MyToolkit.Mvvm.ViewModelBase,System.Windows.FrameworkElement)">
            <summary>Initializes the view model and registers events so that the OnLoaded and OnUnloaded methods are called. 
            This method must be called in the constructor after the <see cref="!:InitializeComponent"/> method call. </summary>
            <param name="viewModel">The view model. </param>
            <param name="view">The view. </param>
        </member>
        <member name="T:MyToolkit.Converters.DateTimeConverter">
            <summary>
            Converts a DateTime into its string representation. 
            </summary>
        </member>
        <member name="T:MyToolkit.Encryption.RijndaelEncryption">
            <summary>
            Provides methods to encrypt and decrypt data using the Rijndael encryption algorithm. 
            </summary>
        </member>
        <member name="T:MyToolkit.Messaging.DefaultActions">
            <summary>
            Provides default actions for some message lcasses to use with the <see cref="T:MyToolkit.Messaging.Messenger"/>. 
            </summary>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetThumbnailUri(System.String,MyToolkit.Multimedia.YouTubeThumbnailSize)">
            <summary>
            Returns a thumbnail for the given YouTube ID. 
            </summary>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetBestVideoUri(System.Collections.Generic.IEnumerable{MyToolkit.Multimedia.YouTubeUri},MyToolkit.Multimedia.YouTubeQuality,MyToolkit.Multimedia.YouTubeQuality)">
            <summary>
            Returns the best matching YouTube stream URI which has an audio and video channel and is not 3D.
            </summary>
            <returns>Returns null when no appropriate URI has been found. </returns>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetVideoUriAsync(System.String,MyToolkit.Multimedia.YouTubeQuality)">
            <summary>
            Returns the best matching YouTube stream URI which has an audio and video channel and is not 3D. 
            </summary>
            <returns>Returns null when no appropriate URI has been found. </returns>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetVideoUriAsync(System.String,MyToolkit.Multimedia.YouTubeQuality,System.Threading.CancellationToken)">
            <summary>
            Returns the best matching YouTube stream URI which has an audio and video channel and is not 3D. 
            </summary>
            <returns>Returns null when no appropriate URI has been found. </returns>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetVideoUriAsync(System.String,MyToolkit.Multimedia.YouTubeQuality,MyToolkit.Multimedia.YouTubeQuality)">
            <summary>
            Returns the best matching YouTube stream URI which has an audio and video channel and is not 3D. 
            </summary>
            <returns>Returns null when no appropriate URI has been found. </returns>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetVideoUriAsync(System.String,MyToolkit.Multimedia.YouTubeQuality,MyToolkit.Multimedia.YouTubeQuality,System.Threading.CancellationToken)">
            <summary>
            Returns the best matching YouTube stream URI which has an audio and video channel and is not 3D. 
            </summary>
            <returns>Returns null when no appropriate URI has been found. </returns>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetUrisAsync(System.String)">
            <summary>
            Returns all available URIs (audio-only and video) for the given YouTube ID. 
            </summary>
        </member>
        <member name="M:MyToolkit.Multimedia.YouTube.GetUrisAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns all available URIs (audio-only and video) for the given YouTube ID. 
            </summary>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.CreateCachedSerializer``1(System.Boolean,System.Type[])">
            <summary>Creates or retrieves a serializer for the given type and extra types. </summary>
            <typeparam name="T">The type to create the serialzer for. </typeparam>
            <param name="preserveReferences">Specifies whether to preserve references. </param>
            <param name="extraTypes">The extra types. </param>
            <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer"/>. </returns>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.CreateSerializer``1(System.Boolean,System.Type[])">
            <summary>Creates a serializer for the given type and extra types. </summary>
            <typeparam name="T">The type to create the serialzer for. </typeparam>
            <param name="preserveReferences">Specifies whether to preserve references. </param>
            <param name="extraTypes">The extra types. </param>
            <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer"/>. </returns>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.Serialize``1(``0,System.Boolean,System.Type[],System.Boolean)">
            <summary>Serializes an object to a XML string. </summary>
            <typeparam name="T">The type of the object to serialize. </typeparam>
            <param name="obj">The object to serialize. </param>
            <param name="preserveReferences">Specifies whether to preserve references. </param>
            <param name="extraTypes">The additional types. </param>
            <param name="useSerializerCache">Specifies whether to cache the serializer (default: true). </param>
            <returns>The XML string. </returns>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.Deserialize``1(System.String,System.Type[],System.Boolean)">
            <summary>Deserializes an object from a XML string. </summary>
            <typeparam name="T">The type of the resulting object. </typeparam>
            <param name="xml">The XML string. </param>
            <param name="extraTypes">The addional types. </param>
            <param name="useSerializerCache">Specifies whether to cache the serializer (default: true). </param>
            <returns>The deserialized object. </returns>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.SerializeAsync``1(``0,System.Boolean,System.Type[],System.Boolean)">
            <summary>Asynchronously serializes an object to a XML string. </summary>
            <typeparam name="T">The type of the object to serialize. </typeparam>
            <param name="preserveReferences">Specifies whether to preserve references. </param>
            <param name="obj">The object to serialize. </param>
            <param name="extraTypes">The additional types. </param>
            <param name="useSerializerCache">Specifies whether to cache the serializer (default: true). </param>
            <returns>The XML string. </returns>
        </member>
        <member name="M:MyToolkit.Serialization.DataContractSerialization.DeserializeAsync``1(System.String,System.Type[],System.Boolean)">
            <summary>Asynchronously deserializes an object from a XML string. </summary>
            <typeparam name="T">The type of the resulting object. </typeparam>
            <param name="xml">The XML string. </param>
            <param name="extraTypes">The addional types. </param>
            <param name="useSerializerCache">Specifies whether to cache the serializer (default: true). </param>
            <returns>The deserialized object. </returns>
        </member>
        <member name="T:MyToolkit.Utilities.ColorUtility">
            <summary>
            Provides methods to manipulate <see cref="T:System.Windows.Media.Color"/> objects. 
            </summary>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.Mix(System.Windows.Media.Color,System.Double,System.Windows.Media.Color)">
            <summary>
            Blends the given foreground color with the background using the given alpha value. 
            </summary>
            <param name="foreground">The foreground <see cref="T:System.Windows.Media.Color"/>. </param>
            <param name="alpha">The alpha value. </param>
            <param name="background">The background <see cref="T:System.Windows.Media.Color"/>. </param>
            <returns>The new <see cref="T:System.Windows.Media.Color"/>. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.RemoveAlpha(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Removes the transparency from the foreground color using the given background color. 
            </summary>
            <param name="foreground">The foreground <see cref="T:System.Windows.Media.Color"/>. </param>
            <param name="background">The background <see cref="T:System.Windows.Media.Color"/>. </param>
            <returns>The color without transparency. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.ChangeAlpha(System.Windows.Media.Color,System.Byte)">
            <summary>
            Changes the alpha channel of the <see cref="T:System.Windows.Media.Color"/>. 
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color"/>. </param>
            <param name="alpha">The new alpha value. </param>
            <returns>The new <see cref="T:System.Windows.Media.Color"/>. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.ChangeAlpha(System.Windows.Media.Color,System.String)">
            <summary>
            Changes the alpha channel of the <see cref="T:System.Windows.Media.Color"/>. 
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color"/>. </param>
            <param name="alpha">The new alpha value. </param>
            <returns>The new <see cref="T:System.Windows.Media.Color"/>. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.ToHex(System.Windows.Media.Color,System.Boolean)">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> to HEX string. 
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color"/>. </param>
            <param name="includeAlpha">If false then #RRGGBB, true then #AARRGGBB. </param>
            <returns>The HEX string. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.FromHex(System.String)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.Color"/> from a HEX value. 
            </summary>
            <param name="colorCode">The HEX in the form #RRGGBB or #AARRGGBB. </param>
            <returns>The <see cref="T:System.Windows.Media.Color"/>. </returns>
        </member>
        <member name="M:MyToolkit.Utilities.ColorUtility.FromHex(System.UInt32)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.Color"/> from a HEX value. 
            </summary>
            <param name="argb">The HEX value. </param>
            <returns>The <see cref="T:System.Windows.Media.Color"/>. </returns>
        </member>
        <member name="T:MyToolkit.UI.ShortcutManager">
            <summary>The manager for registering shortcuts.</summary>
        </member>
        <member name="M:MyToolkit.UI.ShortcutManager.RegisterShortcut(System.Type,System.Windows.Input.KeyGesture,System.Action,System.Func{System.Boolean})">
            <summary>Registers a given shortcut for a specific view and connect that shortcut with a given action.</summary>
            <param name="viewType">The type of the view.</param>
            <param name="gesture">The shortcut.</param>
            <param name="action">The action.</param>
            <param name="canExecute">Delegate that determines wheter the action can be executed.</param>
        </member>
        <member name="M:MyToolkit.UI.ShortcutManager.RegisterShortcut(System.Type,System.Windows.Input.KeyGesture,System.Windows.Input.ICommand)">
            <summary>Registers a given shortcut for a specific view and connect that shortcut with a given action.</summary>
            <param name="viewType">The type of the view.</param>
            <param name="gesture">The shortcut.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:MyToolkit.UI.ShortcutManager.RegisterShortcut(System.Type[],System.Windows.Input.KeyGesture,System.Action,System.Func{System.Boolean})">
            <summary>Registers a given shortcut for specific views and connect that shortcut with a given action.</summary>
            <param name="viewTypes">The view types.</param>
            <param name="gesture">The shortcut.</param>
            <param name="action">The action.</param>
            <param name="canExecute">Delegate that determines wheter the action can be executed.</param>
        </member>
        <member name="M:MyToolkit.UI.ShortcutManager.RegisterShortcut(System.Type[],System.Windows.Input.KeyGesture,System.Windows.Input.ICommand)">
            <summary>Registers a given shortcut for a specific views and connect that shortcut with a given action.</summary>
            <param name="viewTypes">The view types.</param>
            <param name="gesture">The shortcut.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:MyToolkit.UI.UiDispatcher.InvokeAsync(System.Action)">
            <summary>
            Invokes an action on the dispatcher thread. 
            </summary>
            <param name="action">The action. </param>
        </member>
        <member name="T:MyToolkit.Utilities.FileOpenEventArgs">
            <summary>The file open event arguments. </summary>
        </member>
        <member name="P:MyToolkit.Utilities.FileOpenEventArgs.FileName">
            <summary>Gets the file name of the file to open. </summary>
        </member>
        <member name="T:MyToolkit.Utilities.FileOpenHandler">
            <summary>Handles the file open command line parameter and assures that files are opened in the same application. </summary>
        </member>
        <member name="M:MyToolkit.Utilities.FileOpenHandler.Initialize(System.Windows.Window)">
            <summary>Initializes the file open handler. </summary>
            <param name="window">The window. </param>
        </member>
        <member name="P:MyToolkit.Utilities.FileOpenHandler.Window">
            <summary>Gets the window where the events are dispatched to. </summary>
        </member>
        <member name="E:MyToolkit.Utilities.FileOpenHandler.FileOpen">
            <summary>Occurs when a file should be opened. </summary>
        </member>
    </members>
</doc>
